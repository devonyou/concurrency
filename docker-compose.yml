services:
    app:
        build:
            context: .
            dockerfile: ./Dockerfile
            target: development
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
            - /usr/src/app/dist
        env_file:
            - ./.env
        depends_on:
            - mysql
            - redis
            - rabbitmq

    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - app

    mysql:
        image: mysql:5.7
        platform: linux/amd64
        ports:
            - '${MYSQL_PORT}:3306'
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        healthcheck:
            test:
                [
                    'CMD',
                    'mysqladmin',
                    'ping',
                    '-h',
                    'mysql',
                    '-u',
                    'root',
                    '-p${MYSQL_PASSWORD}',
                ]
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 5s
        env_file:
            - ./.env
        environment:
            TZ: Asia/Seoul
            MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
            MYSQL_DATABASE: '${MYSQL_DATABASE}'
            MYSQL_ROOT_PASSWORD: '${MYSQL_PASSWORD}'
    redis:
        image: redis:7-alpine
        ports:
            - '${REDIS_PORT}:6379'
        volumes:
            - ./redis/data:/data
            - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
        restart: always
        command: redis-server --appendonly yes
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        ports:
            - '${RABBITMQ_PORT}:5672'
            - '${RABBITMQ_MANAGEMENT_PORT}:15672'
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
        volumes:
            - ./rabbitmq/data:/var/lib/rabbitmq
        healthcheck:
            test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
